#BlueJ class context
comment0.target=BlackJack
comment0.text=\n\ Simple\ Procedural\ BlackJack\ Game\ \n\ \n
comment1.params=
comment1.target=BlackJack()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ BlackJack\n
comment10.params=
comment10.target=void\ displayShowing()
comment10.text=\n\ Displays\ the\ player's\ hand\ total\ and\ the\ total\ of\ the\ cards\ the\ dealer\n\ is\ showing.\ \n
comment11.params=
comment11.target=void\ evaluateHandWinner()
comment11.text=\n\ Runs\ through\ the\ possible\ outcomes\ of\ the\ blackjack\ hand\ and\ sets\ playerWins\ to\ true\ or\ false\ \n\ depending\ on\ the\ outcome.\ Prints\ the\ outcome\ determined\ to\ the\ console.\ If\ the\ hand\ is\ a\ tie\ \n\ the\ boolean\ variable\ tie\ is\ set\ to\ true.\n
comment12.params=
comment12.target=void\ betReturn()
comment12.text=\n\ After\ the\ winner\ of\ the\ hand\ has\ been\ determined,\ betReturn()\ tells\ the\ player\ what\n\ their\ prize\ or\ loss\ is\ and\ tells\ them\ how\ much\ money\ they\ are\ left\ with.\n
comment13.params=
comment13.target=void\ resetGame()
comment13.text=\n\ Sets\ all\ variables\ to\ their\ initial\ values\ for\ the\ next\ hand\ of\ BlackJack\n
comment14.params=
comment14.target=int\ getBet()
comment14.text=\n\ Used\ to\ get\ the\ bet\ amount\ (int)\ from\ the\ user\n\ Further,\ caputures\ the\ return\ key\ being\ pressed\ so\ further\ scan\ events\ work.\n\ @return\:\ Bet\ Amount\n
comment15.params=
comment15.target=void\ initializeDeck()
comment15.text=\n\ Uses\ a\ list\ of\ card\ values.\ \ Where\ the\ ACE\ is\ set\ to\ 11\ to\ poplulate\ an\ arraylist\n\ with\ the\ correct\ distribution\ of\ cards\ and\ values\n
comment16.params=
comment16.target=int\ dealCard()
comment16.text=\n\ Randomly\ deals\ a\ card\ from\ the\ deck\ (based\ on\ deck\ size)\n\ @return\:\ \ int\ from\ possible\ card\ values.\ \ Ace\ will\ be\ 11\n
comment17.params=
comment17.target=void\ resetDeck()
comment17.text=\n\ Creates\ a\ new\ (empty)\ arrayList\ to\ hold\ card\ values.\ \ It\ will\ then\ use\ the\ initialize\n\ deck\ method\ to\ get\ 52\ cards\ with\ the\ correct\ numeric\ distribution\n
comment2.params=
comment2.target=void\ playGame()
comment2.text=\n\ Implements\ the\ game\ mechanics\ of\ blackJack\ for\ two\ players\n
comment3.params=
comment3.target=void\ wantToPlay()
comment3.text=\n\ Asks\ the\ player\ if\ they\ would\ like\ to\ play\ Black\ Jack\ and\ creates\ a\ variable\ to\ be\ used\ to\ decide\n\ whether\ or\ not\ to\ continue\ the\ game.\n
comment4.params=
comment4.target=void\ playAgain()
comment4.text=\n\ Asks\ the\ user\ if\ they\ would\ like\ to\ play\ at\ the\ end\ of\ a\ round.\n\ Only\ works\ if\ the\ player\ has\ money\ with\ which\ they\ can\ bet.\n
comment5.params=
comment5.target=void\ dealPlayer()
comment5.text=\n\ Deals\ a\ card\ to\ the\ player\ and\ adds\ it\ to\ the\ total.\n\ If\ an\ 11\ is\ dealt,\ the\ method\ remembers\ that\ so\ if\ the\ player's\ total\n\ exceeds\ 21\ then\ the\ eleven\ is\ turned\ into\ a\ 1\ by\ subtracting\ 10.\n\ If\ an\ ace\ has\ not\ been\ dealt\ and\ the\ players\ total\ is\ greater\ than\ 21\ \n\ it\ remembers\ that\ the\ player\ has\ busted.\n
comment6.params=
comment6.target=void\ dealDealer()
comment6.text=\n\ Deals\ two\ cards\ to\ the\ dealer.\ Two\ variables\ are\ used\ to\ hold\ the\ value\n\ displayed\ to\ the\ user\ as\ well\ as\ the\ true\ total\ of\ the\ dealer's\ hand.\n
comment7.params=
comment7.target=void\ playerHit()
comment7.text=\n\ Asks\ the\ player\ if\ they\ would\ like\ to\ hit.\ If\ they\ do,\ the\ user\ will\n\ continue\ to\ have\ the\ option\ to\ hit\ until\ they\ either\ choose\ to\ stop\n\ or\ bust.\n
comment8.params=
comment8.target=void\ dealerHit()
comment8.text=\n\ If\ the\ player\ has\ not\ busted,\ the\ dealer\ is\ dealt\ new\ cards\ until\ \n\ the\ dealer's\ total\ is\ equal\ to\ or\ greater\ than\ 17.\ \n\ If\ the\ dealer\ busts,\ it\ stores\ that\ as\ a\ boolean\ and\ evaluates\ the\ \n\ hand\ winner.\n
comment9.params=
comment9.target=void\ playerBet()
comment9.text=\n\ Recieves\ desired\ bet\ amount\ and\ uses\ it\ if\ the\ player\ has\ enough\ money\n\ but\ asks\ for\ a\ new\ value\ if\ the\ player\ doesn't\ have\ enough\ money.\n
numComments=18
